
@model IdentityApi.Areas.Identity.Data.IdentityApiUser

@using Microsoft.AspNetCore.Identity
@using IdentityApi.Areas.Identity.Data

@inject SignInManager<IdentityApiUser> SignInManager
@inject UserManager<IdentityApiUser> UserManager

@{
}
<h1>Edit</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LirstName" class="control-label"></label>
                <input asp-for="LirstName" class="form-control" />
                <span asp-validation-for="LirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">AddRole</label>

                @if (ViewBag.AdminRoleUser.UserId == UserManager.GetUserId(User))
                {
                    <select name="RoleName" id="RoleId">
                        roles
                        @foreach (var item in ViewBag.Roles)
                        {

                            <option value=@item.Name name="role" class="form-control"> @item.Name  </option>

                        }
                    </select>
                }
                else
                {
                    <label class="control-label"> role</label>
                    <input class="form-control" value="@ViewBag.LoginUserRole.RoleName" disabled />
                }

            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
